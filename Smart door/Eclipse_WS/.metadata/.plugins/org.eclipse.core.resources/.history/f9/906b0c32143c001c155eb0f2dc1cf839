/*
 * MC1.c
 *
 *  Created on: Oct 31, 2021
 *      Author: hp
 */
#include "uart.h"
#include "keypad.h"
#include "lcd.h"
#include "timer0.h"
#include "util/delay.h"

#define INCORRECT 0
#define CORRECT 1
#define COMPARE 0x10
#define	SAVE 0x20
#define BUZZER_ON 0x30

void SetPassword(uint8 *);
void GetPassword(uint8 *);
uint8 ComparePassword(uint8 *);
void OpenDoor(void);
void Alarm(void);

int main(void){
	uint8 password[5];						/* an array of five characters to hold the password */
	uint8 operation;						/* to hold the wanted operation */
	uint8 passwordComResult;
	/* Configurations of the UART*/
	UART_config uartConfig;
	uartConfig.baudRate=9600;
	uartConfig.dataSize=BIT_8;
	uartConfig.parityType=PARITY_OFF;
	uartConfig.stopBits=ONE_BIT;
	UART_init(&uartConfig);					/* initializing the UART */

	LCD_init();								/* initializing the LCD*/
	SetPassword(password);					/* To set the password for the first time*/

	while(1){
		LCD_clearScreen();
		/* Printing the menu on the LCD */
		LCD_displayString("+ open door ");
		LCD_displayStringRowColumn(1,0,"- change pass");
		LCD_moveCursor(2,0);
		operation=KEYPAD_getPressedKey();
		switch(operation){
		case '+':

			OpenDoor();
			break;
		case '-':
			LCD_clearScreen();
			GetPassword(password);
			passwordComResult=ComparePassword(password);
			if(CORRECT==passwordComResult){
				SetPassword(password);
			}
			break;
		}
	}
}
/*
 * a function to take the new password from the user and store it in an array
 */
void SetPassword(uint8 * password){
	LCD_clearScreen();						/* clearing the screen before printing anything*/
	uint8 i=0;								/* for loop counter */
	uint8 compareFlag=0;					/* a flag to indicate if the passwords are matched or not */
	uint8 repeatedPassword[5];				/* an array to hold the second entry of the password */
	do {
		LCD_clearScreen();
		_delay_ms(500);
		GetPassword(password);
		_delay_ms(500);
		LCD_moveCursor(2,0);
		LCD_displayString("Reenter pass"); /* printing the string "Please reenter password on the LCD"*/
		LCD_moveCursor(3,0);
		for(i=0;i<5;i++){
			repeatedPassword[i]=KEYPAD_getPressedKey();
			_delay_ms(500);
			LCD_displayCharacter('*');
			if(repeatedPassword[i]!=password[i]){
				compareFlag=1;
			}
			else{
				compareFlag=0;
			}
		}
	}while(compareFlag==1);
	LCD_clearScreen();
}
/*
 * to enter the password in the main password array
 */
void GetPassword(uint8 * password){
	uint8 i=0;								/* for loop counter */
	LCD_clearScreen();
	LCD_displayString("Enter pass"); /* printing the string "Please enter pass" on the LCD */
	LCD_moveCursor(1,0);					/* moving the cursor to the second row */
	/* for loop to store the password in an array */
	for(i=0;i<5;i++){
		password[i]=KEYPAD_getPressedKey();
		_delay_ms(500);
		LCD_displayCharacter('*');
	}
}
/* a function to send the password to be compared*/
uint8 ComparePassword(uint8 * password){
	uint8 comparingResult;
	return comparingResult;
}
void OpenDoor(void){

}
void Alarm(void){

}
